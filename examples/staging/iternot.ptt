include "../lib/nat.ptt"
include "../lib/bool.ptt"

define iterNot
  : Nat -> Bool -> Bool
  = \n m -> iterNat Bool m (\acc -> not acc) n

define iterNot3 = iterNot three

-- staged version
define iterNotCode
  : Nat -> Code [| Bool |] -> Code [| Bool |]
  = \n m -> iterNat (Code [| Bool |]) m (\acc -> [| not $acc |]) n

define iterNot3' : Bool -> Bool = \p -> $(iterNotCode three [| p |])

include "../lib/leibniz.ptt"

type %refl : Id {Bool}         (iterNot3 true) (iterNot3' true)
type %refl : Id {Bool -> Bool} iterNot3       iterNot3'
